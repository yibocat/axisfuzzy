#  Copyright (c) yibocat 2025 All Rights Reserved
#  Python: 3.10.9
#  Date: 2025/8/15 17:10
#  Author: yibow
#  Email: yibocat@yeah.net
#  Software: FuzzLab


from typing import Union, Tuple, List, Optional, Any
from .core.fuzznums import Fuzznum
from .core.fuzzarray import Fuzzarray


def reshape(obj: Union[Fuzznum, Fuzzarray], *shape: int) -> Fuzzarray: ...
def flatten(obj: Union[Fuzznum, Fuzzarray]) -> Fuzzarray: ...
def squeeze(obj: Union[Fuzznum, Fuzzarray],
            axis: Union[int, Tuple[int, ...], None] = ...) -> Union[Fuzznum, Fuzzarray]: ...
def copy(obj: Any) -> Any: ...
def ravel(obj: Union[Fuzznum, Fuzzarray]) -> Fuzzarray: ...
def transpose(obj: Union[Fuzznum, Fuzzarray], *axes) -> Union[Fuzznum, Fuzzarray]: ...
def broadcast_to(obj: Union[Fuzznum, Fuzzarray], *shape: int) -> Fuzzarray: ...
def item(obj: Union[Fuzznum, Fuzzarray], *args) -> Fuzznum: ...
def any(obj: Fuzzarray) -> bool: ...
def all(obj: Fuzzarray) -> bool: ...
def concat(obj: Fuzzarray, *others: Fuzzarray, axis: int = ...) -> Fuzzarray: ...
def stack(obj: Fuzzarray, *others: Fuzzarray, axis: int = ...) -> Fuzzarray: ...
def append(obj: Union[Fuzznum, Fuzzarray],
           item: Union[Fuzznum, Fuzzarray, List[Fuzznum]],
           axis: Optional[int] = ...,
           inplace: bool = ...) -> Union[Fuzzarray, None]: ...
def pop(obj: Fuzzarray, index: int = ..., inplace: bool = ...) -> Union[Fuzznum, Tuple[Fuzznum, Fuzzarray], None]: ...
